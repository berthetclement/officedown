% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rdocx_document.R
\name{rdocx_document}
\alias{rdocx_document}
\alias{rdocx_document2}
\title{Advanced R Markdown Word Format}
\usage{
rdocx_document(
  mapstyles,
  base_format = "rmarkdown::word_document",
  tables = list(),
  plots = list(),
  lists = list(),
  ...
)

rdocx_document2(...)
}
\arguments{
\item{mapstyles}{a named list of style to be replaced in the generated
document. \code{list("Date"="Author")} will result in a document where
all paragraphs styled with stylename "Date" will be styled with
stylename "Author".}

\item{base_format}{a scalar character, format to be used as a base document for
officedown. default to \link[rmarkdown:word_document]{word_document} but
can also be word_document2 from bookdown}

\item{tables}{a list that can contain few items to style tables and table captions.
Missing items will be replaced by default values. Possible items are the following:
\itemize{
\item \code{style}: the Word stylename to use for tables. This is
a \strong{table style}. You can access them in the Word template used. Function
\link[officer:styles_info]{styles_info(doc, type = "table")} can let you read these
styles.
\item \code{layout}: 'autofit' or 'fixed' algorithm. See \code{\link[officer]{table_layout}}.
\item \code{width}: value of the preferred width of the table in percent (base 1).
\item \code{caption}; default values \code{list(style = "Table Caption", pre = "Table ", sep = ": ")}
are producing a numbering chunk of the form "Table 2: ":
\itemize{
\item \code{style}: Word stylename to use for table captions.You
can access them in the Word template used. Function
\link[officer:styles_info]{styles_info(doc, type = "paragraph")} can let you read these
styles.
\item \code{pre}: prefix for numbering chunk (default to "Table ").
\item \code{sep}: suffix for numbering chunk (default to ": ").
}
}

Default value is \code{list(style = "Table", layout = "autofit", width = 1, caption = list(style = "Table Caption", pre = "Table ", sep = ": "))}:\preformatted{style: Table
layout: autofit
width: 1.0
caption:
  style: Table Caption
  pre: 'Table '
  sep: ': '
}}

\item{plots}{a list that can contain few items to style figures and figure captions.
Missing items will be replaced by default values. Possible items are the following:
\itemize{
\item \code{style}: the Word stylename to use for plots. This is a \strong{paragraph style}.
You can access them in the Word template used. Function
\link[officer:styles_info]{styles_info(doc, type = "paragraph")} can let you read these
styles.
\item \code{align}: alignment of figures in the output document (possible values are 'left',
'right' and 'center').
\item \code{caption}; default values \code{list(style = "Figure Caption", pre = "Figure ", sep = ": ")}
are producing a numbering chunk of the form "Figure 2: ":
\itemize{
\item \code{style}: Word stylename to use for figure captions.You
can access them in the Word template used. Function
\link[officer:styles_info]{styles_info(doc, type = "paragraph")} can let you read these
styles.
\item \code{pre}: prefix for numbering chunk (default to "Figure ").
\item \code{sep}: suffix for numbering chunk (default to ": ").
}
}

Default value is \code{list(style = "Normal", align = "center", caption = list(style = "Image Caption", pre = "Figure ", sep = ": "))}:\preformatted{style: Normal
align: center
caption:
  style: Image Caption
  pre: 'Figure '
  sep: ': '
}}

\item{lists}{a list containing two named items \code{ol.style} and
\code{ul.style}, values are the stylenames to be used to replace the style of ordered
and unordered lists created by pandoc. If NULL, no replacement is made.

Default value is \code{list(ol.style = NULL, ul.style = NULL)}:\preformatted{ol.style: null
ul.style: null
}}

\item{...}{arguments used by \link[rmarkdown:word_document]{word_document}}
}
\description{
Format for converting from R Markdown to an MS Word
document. The function comes also with improved output options.
\code{rdocx_document2} also supports cross reference based on the syntax of
the bookdown package.
}
\section{table style}{


Pandoc does not allow usage of Word table style. This option
allows you to define which Word table style is the default.
These table styles must be present in the \code{reference_docx} document.
It can be read with \link[officer:styles_info]{styles_info(doc, type = "table")}
or within Word table styles view.

To create a table style in your \code{reference_docx} corresponding to your needs,
edit the document with MS Word and add a new style of type "table" then configure
it. The style name must be used as the value of the "tab.style" argument.

\if{html}{

You should see a window that looks like the one below:

\figure{new_style_table.png}{options: width=400px}

In the Define New Table Style window, start give your new style a name.
There are a many formatting options available in this window.
For example, you can change the font and font style, change the border
and cell colors, and change the text alignment.

}

The package is only using these styles and is not able to create them with
R code.
}

\section{lists}{

Pandoc does not allow easy customization of ordered or unordered lists. This option
allows you to apply a list style for ordered lists and a list style for unordered
lists. These list styles must be present in the \code{reference_docx} document.

To create a list style in your \code{reference_docx} corresponding to your needs,
edit the document with MS Word and add a new style of type "list" then configure
it. The style name must be used as the value of the "ol.style" argument if you
configure an ordered list (i.e. with numbers corresponding to each level) or
as the value of the "ul.style" argument if you configure an unordered list
(i.e. with bullets corresponding to each level).

\if{html}{

You should see a window that looks like the one below:

\figure{new_style_ol.png}{options: width=400px}

In the Define New List Style window, start give your new style a name.
There are a many formatting options available in this window. You can
change the font, define the character formatting and choose the
type (number or bullet).

}

The package is only using these styles and is not able to create them with
R code.
}

\section{R Markdown yaml}{

The following demonstrates how to pass arguments in the R Markdown yaml:\preformatted{---
output:
  officedown::rdocx_document:
    reference_docx: pandoc_template.docx
    tables:
      style: Table
      layout: autofit
      width: 1.0
      caption:
        style: Table Caption
        pre: 'Table '
        sep: ': '
    plots:
      style: Normal
      align: center
      caption:
        style: Image Caption
        pre: 'Figure '
        sep: ': '
    lists:
      ol.style: null
      ul.style: null
---
}
}

\examples{
library(rmarkdown)
skeleton <- system.file(package = "officedown",
                        "example/example.Rmd")
docx_file_1 <- tempfile(fileext = ".docx")
render(skeleton, output_file = docx_file_1)

# official template -----

skeleton <- system.file(package = "officedown",
  "rmarkdown/templates/word/skeleton/skeleton.Rmd")
rmd_file <- tempfile(fileext = ".Rmd")
file.copy(skeleton, to = rmd_file)

docx_file_2 <- tempfile(fileext = ".docx")
render(rmd_file, output_file = docx_file_2)

# bookdown example -----

bookdown_loc <- system.file(package = "officedown",
  "example/bookdown")
new_dir <- tempdir()
file.copy(from = bookdown_loc, to = getwd(),
  overwrite = TRUE, recursive = TRUE)

render_site(input = "bookdown", encoding = 'UTF-8')
docx_file <- file.path("bookdown", "_book", "bookdown.docx")

if(file.exists(docx_file))
  message("file ", docx_file, " has been written.")

unlink("bookdown", force = TRUE, recursive = TRUE)

}
